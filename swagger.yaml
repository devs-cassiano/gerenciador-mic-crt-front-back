openapi: 3.0.3
info:
  title: Sistema de Gestão de Transportadoras e Documentos
  description: |
    API para gerenciamento de transportadoras e geração de documentos CRT e MIC/DTA.
    
    ## Funcionalidades
    - Cadastro e gestão de transportadoras
    - Configuração de licenças por país de destino
    - Geração de documentos CRT
    - Geração de documentos MIC/DTA (NORMAL e LASTRE)
    - Numeração sequencial automática
    
    ## Tipos de MIC/DTA
    - **NORMAL**: Relacionado a um CRT, herda todas as informações
    - **LASTRE**: Independente, para caminhões vazios (todas as transportadoras podem emitir)
    
  version: 1.0.0
  contact:
    name: Cassiano
    email: devs-cassiano@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Servidor de desenvolvimento
  - url: https://api.transportadoras.com/api
    description: Servidor de produção

tags:
  - name: Transportadoras
    description: Gestão de transportadoras e licenças
  - name: CRT
    description: Certificado de Registro de Trânsito
  - name: MIC/DTA
    description: Manifesto Internacional de Carga / Documento de Transporte Aduaneiro
  - name: Configurações
    description: Configurações do sistema

paths:
  # TRANSPORTADORAS
  /transportadoras:
    get:
      tags:
        - Transportadoras
      summary: Listar todas as transportadoras
      description: Retorna lista completa de transportadoras com suas licenças por destino
      responses:
        '200':
          description: Lista de transportadoras
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransportadoraCompleta'
              example:
                success: true
                data:
                  - id: 1
                    nome: "Transportes Brasil Ltda"
                    pais: "BR"
                    numeroRegistro: "12345678"
                    numeroInicialCRT: 11192
                    numeroInicialMicDta: 1
                    vencimentoLicenca: "2025-12-31"
                    paisesDestino:
                      - paisDestino: "PY"
                        licenca: "6023"
                      - paisDestino: "AR"
                        licenca: "6989"
                    createdAt: "2025-07-11T12:24:49.000Z"
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Transportadoras
      summary: Criar nova transportadora
      description: Cria uma nova transportadora com licenças específicas por país de destino
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovaTransportadora'
            examples:
              brasileira:
                summary: Transportadora Brasileira
                value:
                  nome: "Transportes Brasil Ltda"
                  pais: "BR"
                  numeroRegistro: "12345678"
                  numeroInicialCRT: 11192
                  numeroInicialMicDta: 1
                  paisesDestino:
                    - paisDestino: "PY"
                      licenca: "6023"
                      vencimentoLicenca: "2025-12-31"
                    - paisDestino: "AR"
                      licenca: "6989"
                      vencimentoLicenca: "2026-06-30"
              paraguaia:
                summary: Transportadora Paraguaia
                value:
                  nome: "Transportes Paraguay SA"
                  pais: "PY"
                  numeroRegistro: "87654321"
                  numeroInicialCRT: 1
                  numeroInicialMicDta: 1
                  paisesDestino:
                    - paisDestino: "BR"
                      licenca: "5500"
                      idoneidade: "ID789012"
                      vencimentoLicenca: "2025-11-15"
                    - paisDestino: "AR"
                      licenca: "5501"
                      idoneidade: "ID789013"
                      vencimentoLicenca: "2026-03-20"
      responses:
        '201':
          description: Transportadora criada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/TransportadoraCompleta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transportadoras/{id}:
    get:
      tags:
        - Transportadoras
      summary: Buscar transportadora por ID
      parameters:
        - $ref: '#/components/parameters/TransportadoraId'
      responses:
        '200':
          description: Transportadora encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/TransportadoraCompleta'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Transportadoras
      summary: Atualizar transportadora
      parameters:
        - $ref: '#/components/parameters/TransportadoraId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovaTransportadora'
      responses:
        '200':
          description: Transportadora atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Transportadoras
      summary: Deletar transportadora
      parameters:
        - $ref: '#/components/parameters/TransportadoraId'
      responses:
        '200':
          description: Transportadora deletada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # CRT
  /crt:
    get:
      tags:
        - CRT
      summary: Listar todos os CRTs
      responses:
        '200':
          description: Lista de CRTs
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CRT'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - CRT
      summary: Criar novo CRT
      description: |
        Cria um ou múltiplos CRTs para uma transportadora específica.
        O país de destino é obrigatório para definir qual licença será usada.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoCRT'
            example:
              transportadoraId: 1
              quantidade: 2
              faturaComercial: "FC-001"
              exportador: "Empresa XYZ"
              importador: "Empresa ABC"
              paisOrigemCodigo: "BR"
              paisDestinoCodigo: "PY"
      responses:
        '201':
          description: CRT(s) criado(s) com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CRT'
                  message:
                    type: string
                    example: "2 CRT(s) criado(s) com sucesso"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /crt/{id}:
    get:
      tags:
        - CRT
      summary: Buscar CRT por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do CRT
      responses:
        '200':
          description: CRT encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/CRT'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /crt/transportadora/{transportadoraId}:
    get:
      tags:
        - CRT
      summary: Buscar CRTs por transportadora
      parameters:
        - $ref: '#/components/parameters/TransportadoraId'
      responses:
        '200':
          description: CRTs da transportadora
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CRT'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # MIC/DTA
  /mic-dta:
    get:
      tags:
        - MIC/DTA
      summary: Listar todos os MIC/DTAs
      responses:
        '200':
          description: Lista de MIC/DTAs
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MicDta'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - MIC/DTA
      summary: Criar novo MIC/DTA
      description: |
        Cria um ou múltiplos MIC/DTAs. Suporta dois tipos:
        
        **NORMAL**: Relacionado a um CRT existente, herda todas as informações
        **LASTRE**: Independente, para caminhões vazios (todas as transportadoras podem emitir)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NovoMicDtaNormal'
                - $ref: '#/components/schemas/NovoMicDtaLastre'
              discriminator:
                propertyName: tipo
            examples:
              normal:
                summary: MIC/DTA NORMAL (relacionado a CRT)
                value:
                  tipo: "NORMAL"
                  crtId: 1
                  quantidade: 3
              lastre:
                summary: MIC/DTA LASTRE (caminhão vazio)
                value:
                  tipo: "LASTRE"
                  transportadoraId: 1
                  paisOrigemCodigo: "BR"
                  paisDestinoCodigo: "PY"
                  quantidade: 2
              lastre_estrangeira:
                summary: MIC/DTA LASTRE (transportadora estrangeira)
                value:
                  tipo: "LASTRE"
                  transportadoraId: 2
                  paisOrigemCodigo: "PY"
                  paisDestinoCodigo: "BR"
                  quantidade: 1
      responses:
        '201':
          description: MIC/DTA(s) criado(s) com sucesso
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RespostaMicDtaNormal'
                  - $ref: '#/components/schemas/RespostaMicDtaLastre'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mic-dta/tipo/{tipo}:
    get:
      tags:
        - MIC/DTA
      summary: Buscar MIC/DTAs por tipo
      parameters:
        - name: tipo
          in: path
          required: true
          schema:
            type: string
            enum: [NORMAL, LASTRE]
          description: Tipo do MIC/DTA
      responses:
        '200':
          description: MIC/DTAs do tipo especificado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MicDta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mic-dta/transportadora/{transportadoraId}:
    get:
      tags:
        - MIC/DTA
      summary: Buscar MIC/DTAs por transportadora
      parameters:
        - $ref: '#/components/parameters/TransportadoraId'
      responses:
        '200':
          description: MIC/DTAs da transportadora
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MicDta'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mic-dta/crt/{crtId}:
    get:
      tags:
        - MIC/DTA
      summary: Buscar MIC/DTAs relacionados a um CRT
      description: Retorna apenas MIC/DTAs do tipo NORMAL relacionados ao CRT especificado
      parameters:
        - name: crtId
          in: path
          required: true
          schema:
            type: integer
          description: ID do CRT
      responses:
        '200':
          description: MIC/DTAs relacionados ao CRT
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/MicDta'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /mic-dta/next-number/{transportadoraId}:
    get:
      tags:
        - MIC/DTA
      summary: Obter próximo número sequencial do MIC/DTA
      description: Retorna o próximo número sequencial que será usado na criação de um MIC/DTA para a transportadora especificada
      parameters:
        - name: transportadoraId
          in: path
          required: true
          schema:
            type: integer
          description: ID da transportadora
        - name: paisOrigemCodigo
          in: query
          required: false
          schema:
            type: string
          description: Código do país de origem (se não informado, usa o país da transportadora)
          example: "BR"
        - name: paisDestinoCodigo
          in: query
          required: true
          schema:
            type: string
          description: Código do país de destino
          example: "AR"
        - name: licencaComplementar
          in: query
          required: false
          schema:
            type: string
          description: Licença complementar (se não informada, busca pela transportadora)
          example: "ABC123"
      responses:
        '200':
          description: Próximo número sequencial
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      numeroCompleto:
                        type: string
                        description: Número completo formatado
                        example: "BR.01.001.AR.ABC123"
                      numeroSequencial:
                        type: integer
                        description: Número sequencial
                        example: 1
                      paisOrigemCodigo:
                        type: string
                        description: Código do país de origem
                        example: "BR"
                      paisDestinoCodigo:
                        type: string
                        description: Código do país de destino
                        example: "AR"
                      licencaComplementar:
                        type: string
                        description: Licença complementar
                        example: "ABC123"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # CONFIGURAÇÕES
  /countries:
    get:
      tags:
        - Configurações
      summary: Listar países disponíveis
      description: Retorna lista de países suportados pelo sistema
      responses:
        '200':
          description: Lista de países
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pais'
              example:
                success: true
                data:
                  - code: "BR"
                    name: "Brasil"
                  - code: "PY"
                    name: "Paraguay"
                  - code: "AR"
                    name: "Argentina"

components:
  parameters:
    TransportadoraId:
      name: transportadoraId
      in: path
      required: true
      schema:
        type: integer
      description: ID da transportadora

  schemas:
    # TRANSPORTADORA
    NovaTransportadora:
      type: object
      required:
        - nome
        - pais
        - numeroRegistro
        - paisesDestino
      properties:
        nome:
          type: string
          description: Nome da transportadora
          example: "Transportes Brasil Ltda"
        pais:
          type: string
          description: Código do país da transportadora
          enum: [BR, PY, AR]
          example: "BR"
        numeroRegistro:
          type: string
          description: Número de registro único da transportadora
          example: "12345678"
        numeroInicialCRT:
          type: integer
          description: Número inicial para sequência de CRTs
          default: 1
          example: 11192
        numeroInicialMicDta:
          type: integer
          description: Número inicial para sequência de MIC/DTAs
          default: 1
          example: 1
        paisesDestino:
          type: array
          description: Licenças por país de destino
          items:
            type: object
            required:
              - paisDestino
              - licenca
            properties:
              paisDestino:
                type: string
                description: Código do país de destino
                enum: [BR, PY, AR]
                example: "PY"
              licenca:
                type: string
                description: Licença complementar para este destino
                example: "6023"
              idoneidade:
                type: string
                description: Número de idoneidade (obrigatório para transportadoras estrangeiras)
                example: "ID123456"
              vencimentoLicenca:
                type: string
                format: date
                description: Data de vencimento da licença para este destino
                example: "2025-12-31"

    TransportadoraCompleta:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 1
            createdAt:
              type: string
              format: date-time
              example: "2025-07-11T12:24:49.000Z"
            updatedAt:
              type: string
              format: date-time
              example: "2025-07-11T12:24:49.000Z"
        - $ref: '#/components/schemas/NovaTransportadora'

    # CRT
    NovoCRT:
      type: object
      required:
        - transportadoraId
        - faturaComercial
        - exportador
        - importador
        - paisDestinoCodigo
      properties:
        transportadoraId:
          type: integer
          description: ID da transportadora
          example: 1
        quantidade:
          type: integer
          description: Quantidade de CRTs a criar
          minimum: 1
          maximum: 100
          default: 1
          example: 2
        faturaComercial:
          type: string
          description: Número da fatura comercial
          example: "FC-001"
        exportador:
          type: string
          description: Nome do exportador
          example: "Empresa XYZ"
        importador:
          type: string
          description: Nome do importador
          example: "Empresa ABC"
        paisOrigemCodigo:
          type: string
          description: Código do país de origem
          enum: [BR, PY, AR]
          example: "BR"
        paisDestinoCodigo:
          type: string
          description: Código do país de destino (obrigatório para definir licença)
          enum: [BR, PY, AR]
          example: "PY"

    CRT:
      type: object
      properties:
        id:
          type: integer
          example: 1
        numero:
          type: string
          description: Número completo do CRT
          example: "BR602300001"
        paisOrigemCodigo:
          type: string
          example: "BR"
        paisDestinoCodigo:
          type: string
          example: "PY"
        licencaComplementar:
          type: string
          example: "6023"
        numeroSequencial:
          type: integer
          example: 1
        faturaComercial:
          type: string
          example: "FC-001"
        exportador:
          type: string
          example: "Empresa XYZ"
        importador:
          type: string
          example: "Empresa ABC"
        dataCriacao:
          type: string
          description: Data de criação (formato DD/MM/YYYY)
          example: "11/07/2025"
        transportadoraId:
          type: integer
          example: 1
        transportadoraNome:
          type: string
          example: "Transportes Brasil Ltda"
        transportadoraPais:
          type: string
          example: "BR"
        createdAt:
          type: string
          format: date-time
          example: "2025-07-11T12:24:49.000Z"

    # MIC/DTA
    NovoMicDtaNormal:
      type: object
      required:
        - tipo
        - crtId
      properties:
        tipo:
          type: string
          enum: [NORMAL]
          example: "NORMAL"
        crtId:
          type: integer
          description: ID do CRT relacionado
          example: 1
        quantidade:
          type: integer
          description: Quantidade de MIC/DTAs a criar
          minimum: 1
          maximum: 100
          default: 1
          example: 3

    NovoMicDtaLastre:
      type: object
      required:
        - tipo
        - transportadoraId
        - paisDestinoCodigo
      properties:
        tipo:
          type: string
          enum: [LASTRE]
          example: "LASTRE"
        transportadoraId:
          type: integer
          description: ID da transportadora
          example: 1
        paisOrigemCodigo:
          type: string
          description: Código do país de origem (opcional, usa país da transportadora)
          enum: [BR, PY, AR]
          example: "BR"
        paisDestinoCodigo:
          type: string
          description: Código do país de destino
          enum: [BR, PY, AR]
          example: "PY"
        quantidade:
          type: integer
          description: Quantidade de MIC/DTAs a criar
          minimum: 1
          maximum: 100
          default: 1
          example: 2

    MicDta:
      type: object
      properties:
        id:
          type: integer
          example: 1
        numero:
          type: string
          description: Número completo do MIC/DTA
          example: "BR602300001"
        tipo:
          type: string
          enum: [NORMAL, LASTRE]
          example: "NORMAL"
        paisOrigemCodigo:
          type: string
          example: "BR"
        paisDestinoCodigo:
          type: string
          example: "PY"
        licencaComplementar:
          type: string
          example: "6023"
        numeroSequencial:
          type: integer
          example: 1
        crtId:
          type: integer
          nullable: true
          description: ID do CRT relacionado (null para LASTRE)
          example: 1
        transportadoraId:
          type: integer
          example: 1
        dataCriacao:
          type: string
          description: Data de criação (formato DD/MM/YYYY)
          example: "11/07/2025"
        transportadoraNome:
          type: string
          example: "Transportes Brasil Ltda"
        transportadoraPais:
          type: string
          example: "BR"
        crtNumero:
          type: string
          nullable: true
          description: Número do CRT relacionado (null para LASTRE)
          example: "BR602300001"
        crtFaturaComercial:
          type: string
          nullable: true
          description: Fatura do CRT relacionado (null para LASTRE)
          example: "FC-001"
        createdAt:
          type: string
          format: date-time
          example: "2025-07-11T12:24:49.000Z"

    RespostaMicDtaNormal:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            micDtas:
              type: array
              items:
                $ref: '#/components/schemas/MicDta'
            tipo:
              type: string
              example: "NORMAL"
            herdadoDoCrt:
              type: object
              properties:
                numero:
                  type: string
                  example: "BR602300001"
                paisOrigem:
                  type: string
                  example: "BR"
                paisDestino:
                  type: string
                  example: "PY"
                licenca:
                  type: string
                  example: "6023"
        message:
          type: string
          example: "3 MIC/DTA(s) NORMAL criado(s) com sucesso, herdando dados do CRT BR602300001"

    RespostaMicDtaLastre:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            micDtas:
              type: array
              items:
                $ref: '#/components/schemas/MicDta'
            tipo:
              type: string
              example: "LASTRE"
            configuracao:
              type: object
              properties:
                transportadora:
                  type: string
                  example: "Transportes Brasil Ltda"
                paisOrigem:
                  type: string
                  example: "BR"
                paisDestino:
                  type: string
                  example: "PY"
                licenca:
                  type: string
                  example: "6023"
                observacao:
                  type: string
                  example: "MIC/DTA LASTRE - Caminhão sem carga"
        message:
          type: string
          example: "2 MIC/DTA(s) LASTRE criado(s) com sucesso para Transportes Brasil Ltda"

    # OUTROS
    Pais:
      type: object
      properties:
        code:
          type: string
          description: Código do país
          example: "BR"
        name:
          type: string
          description: Nome do país
          example: "Brasil"

    SuccessMessage:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operação realizada com sucesso"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Erro na operação"
        statusCode:
          type: integer
          example: 400

  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Dados obrigatórios não informados"
            statusCode: 400

    NotFound:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Recurso não encontrado"
            statusCode: 404

    InternalServerError:
      description: Erro interno do servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Erro interno do servidor"
            statusCode: 500

  /micdta:
    post:
      summary: Emissão de MIC/DTA
      description: |
        Emite um MIC/DTA NORMAL ou LASTRE.
        
        **Regra de Licença/Idoneidade e País de Registro (Brasileiras e Estrangeiras):**
        - Se a transportadora possui licença/idoneidade cadastrada para um país, ou é registrada em um país, ela pode emitir documentos tanto do país de origem para o destino quanto do destino para o país de origem.
        - Exemplo: Se existe licença para Brasil ↔ Paraguai, ou a transportadora é registrada no Brasil, pode emitir MIC/DTA NORMAL ou LASTRE nos dois sentidos, independente de ser transportadora brasileira ou estrangeira.
        - O sistema busca a licença/idoneidade para o país de destino; se não encontrar, busca para o país de origem; se ainda não encontrar, considera o país de registro da transportadora.
        - Isso vale para MIC/DTA NORMAL e LASTRE.
        
        **Campos obrigatórios:**
        - Para NORMAL: crtId
        - Para LASTRE: transportadoraId, paisOrigemCodigo, paisDestinoCodigo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NovoMicDtaNormal'
                - $ref: '#/components/schemas/NovoMicDtaLastre'
              discriminator:
                propertyName: tipo
            examples:
              normal:
                summary: MIC/DTA NORMAL (relacionado a CRT)
                value:
                  tipo: "NORMAL"
                  crtId: 1
                  quantidade: 3
              lastre:
                summary: MIC/DTA LASTRE (caminhão vazio)
                value:
                  tipo: "LASTRE"
                  transportadoraId: 1
                  paisOrigemCodigo: "BR"
                  paisDestinoCodigo: "PY"
                  quantidade: 2
              lastre_estrangeira:
                summary: MIC/DTA LASTRE (transportadora estrangeira)
                value:
                  tipo: "LASTRE"
                  transportadoraId: 2
                  paisOrigemCodigo: "PY"
                  paisDestinoCodigo: "BR"
                  quantidade: 1
      responses:
        '201':
          description: MIC/DTA criado com sucesso
          content:
            application/json:
              examples:
                exemploBrasileira:
                  summary: MIC/DTA NORMAL/LASTRE Brasil ↔ Paraguai
                  value:
                    micDtas:
                      - numero: BR602312345
                        tipo: LASTRE
                        paisOrigemCodigo: BR
                        paisDestinoCodigo: PY
                        licencaComplementar: 6023
                        numeroSequencial: 12345
                        transportadoraId: 1
                        crtId: null
                        dataCriacao: '2025-07-11'
                    tipo: LASTRE
                    configuracao:
                      transportadora: Transporte Brasil LTDA
                      paisOrigem: BR
                      paisDestino: PY
                      licenca: 6023
                      observacao: MIC/DTA LASTRE - Caminhão sem carga
                exemploEstrangeira:
                  summary: MIC/DTA NORMAL/LASTRE Paraguai ↔ Brasil
                  value:
                    micDtas:
                      - numero: PY567812346
                        tipo: NORMAL
                        paisOrigemCodigo: PY
                        paisDestinoCodigo: BR
                        licencaComplementar: 5678
                        numeroSequencial: 12346
                        transportadoraId: 2
                        crtId: null
                        dataCriacao: '2025-07-11'
                    tipo: NORMAL
                    configuracao:
                      transportadora: Transporte PY SA
                      paisOrigem: PY
                      paisDestino: BR
                      licenca: 5678
                      observacao: MIC/DTA NORMAL - Caminhão com carga
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /crt:
    post:
      summary: Emissão de CRT
      description: |
        Emite um CRT (Conhecimento de Transporte).
        
        **Regra de País de Registro (Brasileiras e Estrangeiras):**
        - O país de registro da transportadora pode ser usado como origem ou destino na emissão de CRT.
        - Exemplo: Uma transportadora registrada na Argentina pode emitir CRT do Brasil para Argentina e da Argentina para o Brasil.
        - O sistema busca licença/idoneidade para o país de destino; se não encontrar, busca para o país de origem; se ainda não encontrar, considera o país de registro da transportadora.
        - Isso vale para CRT e MIC/DTA, NORMAL e LASTRE.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoCRT'
            example:
              transportadoraId: 1
              quantidade: 2
              faturaComercial: "FC-001"
              exportador: "Empresa XYZ"
              importador: "Empresa ABC"
              paisOrigemCodigo: "BR"
              paisDestinoCodigo: "PY"
      responses:
        '201':
          description: CRT criado com sucesso
          content:
            application/json:
              examples:
                exemploEstrangeira:
                  summary: CRT Brasil → Argentina
                  value:
                    crt:
                      numero: BRAR00001
                      paisOrigemCodigo: BR
                      paisDestinoCodigo: AR
                      licencaComplementar: ARIDON
                      numeroSequencial: 1
                      transportadoraId: 2
                      dataCriacao: '2025-07-11'
                      exportador: Empresa BR
                      importador: Empresa AR
                      faturaComercial: FC123
                exemploEstrangeiraInversa:
                  summary: CRT Argentina → Brasil
                  value:
                    crt:
                      numero: ARBR00002
                      paisOrigemCodigo: AR
                      paisDestinoCodigo: BR
                      licencaComplementar: ARIDON
                      numeroSequencial: 2
                      transportadoraId: 2
                      dataCriacao: '2025-07-11'
                      exportador: Empresa AR
                      importador: Empresa BR
                      faturaComercial: FC124
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'